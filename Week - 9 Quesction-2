Ques2: Given a knapsack of maximum capacity w. N items are provided, each having its own value and
weight. You have to Design an algorithm and implement it using a program to find the list of the
selected items such that the final selected content has weight w and has maximum value. You can
take fractions of items,i.e. the items can be broken into smaller pieces so that you have to carryonly a fraction xi of item i, where 0 ≤xi≤ 1.
Input Format: 
First input line will take number of items N which are provided. 
Second input line will contain N space-separated array containing weights of all N items.
Third input line will contain N space-separated array containing values of all N items. 
Last line of the input will take the maximum capacity w of knapsack.
Output Format:
First output line will give maximum value that can be achieved.
Next Line of output will give list of items selected along with their fraction of amount which has
been taken.
*/

#include<iostream>
#include<bits/stdc++.h>
#include<algorithm>
using namespace std;

struct Item{
    int value;
    int weight;
};


bool cmp(struct Item a, struct Item b)
{
    double r1 = (double)a.value / (double)a.weight;
    double r2 = (double)b.value / (double)b.weight;
    return r1 > r2;
}

double fractionalKnapsack(int W, struct Item arr[], int n)
{
    sort(arr, arr + n, cmp);
 
   
 
    int curWeight = 0; 
    double finalvalue = 0.0;
    vector<int>val;
    vector<int>frac;
    for (int i = 0; i < n; i++) {
        if (curWeight + arr[i].weight <= W) {

            curWeight += arr[i].weight;
            finalvalue += arr[i].value;

        }
        else {
            int remain = W - curWeight;
            finalvalue += arr[i].value
                          * ((double)remain
                             / (double)arr[i].weight);
            break;
        }
    }
 
    return finalvalue;
}

int main()
{
    int t;
    cin>>t;
    cout<<setprecision(2)<<fixed;
    while(t--){
        int n, W;
        cin>>n>>W;
        
        Item arr[n];
        //value and weight of each item
        for(int i=0;i<n;i++){
            cin>>arr[i].value>>arr[i].weight;
        }
        
        //function call
        cout<<"Maximum Weight : "<<fractionalKnapsack(W, arr, n)<<endl;
    }
    return 0;
}

